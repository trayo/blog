<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Travis Yoder</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Travis Yoder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Mar 2024 11:29:04 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cactuscon 12 Badge Reverse Engineering</title>
      <link>http://localhost:1313/posts/cactuscon-12-badge/</link>
      <pubDate>Thu, 21 Mar 2024 11:29:04 -0700</pubDate>
      <guid>http://localhost:1313/posts/cactuscon-12-badge/</guid>
      <description>Hello and welcome to the reverse engineering guide of the CactusCon 12 (2024) badge.&#xA;The badge uses an ESP32-S3-WROOM-1 chip.&#xA;The data sheet can be found here: espressif.com/sites/default/files/documentation/esp32-s3-wroom-1_wroom-1u_datasheet_en.pdf&#xA;The chip is programmable through either ESP-IDF or PlatformIO in Visual Studio Code.&#xA;Presented here are the steps in the order they were revealed/figured out.&#xA;Note: These are the steps that I executed on a Mac. Some adjustment may be necessary for *nix and Windows.</description>
    </item>
  </channel>
</rss>
